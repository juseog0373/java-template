plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.10'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.nexacode'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /**
     * security
     */
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'

    /**
     * amazon s3
     */
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.2")
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

    /**
     * swagger
     */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    /**
     * JWT
     */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /**
     * firebase
     */
    implementation 'com.google.firebase:firebase-admin:9.1.1'


    implementation 'com.mysql:mysql-connector-j:8.3.0'
    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
